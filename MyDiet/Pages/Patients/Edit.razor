@using MyDiet.Services.IService;
@using MyDiet.Models.Dtos;

@page "/patients/{id:int}/edit"
@inject IPatientsService _patientsService
@inject NavigationManager NavigationManager
@inject IMatToaster Toaster

<h3>Edit Patient: @patientDto.Name @patientDto.Surname</h3>
<EditForm Model="@patientDto" OnValidSubmit="ValidSubmit">
    <div class="mat-layou-grid">
        <div class="mat-layout-grid-inner">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                <p>
                    <MatTextField Label="Fiscal Code" @bind-Value="@patientDto.FiscalCode" FullWidth="true" />
                    <ValidationMessage For="@(() => patientDto.FiscalCode)" />
                </p>
                <p>
                    <MatTextField Label="Name" @bind-Value="@patientDto.Name" FullWidth="true" />
                    <ValidationMessage For="@(() => patientDto.Name)" />
                </p>
                <p>
                    <MatTextField Label="Surname" @bind-Value="@patientDto.Surname" FullWidth="true" />
                    <ValidationMessage For="@(() => patientDto.Surname)" />
                </p>
                <p>
                    <MatSelect Label="Gender" @bind-Value="@patientDto.Gender" FullWidth="true">
                        <MatOptionString Value="male">Male</MatOptionString>
                        <MatOptionString Value="female">Female</MatOptionString>
                    </MatSelect>
                    <ValidationMessage For="@(() => patientDto.Gender)" />
                </p>
                <p>
                    <MatTextField Label="Age" @bind-Value="@patientDto.Age" FullWidth="true" />
                    <ValidationMessage For="@(() => patientDto.Age)" />
                </p>
                <p>
                    <MatTextField Label="Weight" @bind-Value="@patientDto.Weight" FullWidth="true" />
                    <ValidationMessage For="@(() => patientDto.Weight)" />
                </p>
                <p>
                    <MatTextField Label="Email" @bind-Value="@patientDto.Email" FullWidth="true" />
                    <ValidationMessage For="@(() => patientDto.Email)" />
                </p>
                <p>
                    <MatTextField Label="Phone" @bind-Value="@patientDto.Phone" FullWidth="true" />
                    <ValidationMessage For="@(() => patientDto.Phone)" />
                </p>
            </div>
            @if (_loading)
            {
                <MatProgressBar Closed="true" />
            }
            else
            {
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                    <MatButton Type="submit" Raised="true" Style="background: green;">Update</MatButton>
                    <MatButton Raised="true" Style="background: red;" @onclick="Back">Cancel</MatButton>
                </div>
            }
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }

    private bool _loading = false;

    PatientDto patientDto = new PatientDto();

    protected override async Task OnInitializedAsync()
    {
        patientDto = await _patientsService.GetPatient(id);
    }

    async Task ValidSubmit(EditContext editContext)
    {
        _loading = true;

        PatientDto patientDtoSubmitted = editContext.Model as PatientDto;

        await Task.Run(() => _patientsService.UpdatePatient(id, patientDtoSubmitted));

        _loading = false;
        Toaster.Add("Patient updated", MatToastType.Success, "Success");

        Back();
    }

    void Back()
    {
        NavigationManager.NavigateTo("/patients");
    }
}
