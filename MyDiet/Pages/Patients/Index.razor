@using MyDiet.Models.Dtos;
@using MyDiet.Services.IService

@page "/patients"
@inject IPatientService _patientsService
@inject NavigationManager NavigationManager
@inject IMatDialogService MatDialogService
@inject IMatToaster Toaster

<h3>Patients</h3>
<div class="mat-layout-grid">
    <div>
        <MatButton Raised="true" Type="button" Style="background: green;" Icon="add_box" @onclick="Create">Add Patient</MatButton>
    </div>
    <div class="mat-layout-grid-inner">
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
            @if (patients.Count > 0)
            {
                <MatTable Items="@patients" Class="mat-elevation-z6" Style="text-align: center; width: 100%; table-layout: fixed; white-space: nowrap">
                    <MatTableHeader>
                        <th style="text-align: center;"> Fiscal Code</th>
                        <th style="text-align: center;"> Name</th>
                        <th style="text-align: center;">Surname</th>
                        <th style="text-align: center;">Gender</th>
                        <th style="text-align: center;">Age</th>
                        <th style="text-align: center;">Email</th>
                        <th style="text-align: center;">Phone</th>
                        <th style="text-align: center;">Options</th>
                    </MatTableHeader>
                    <MatTableRow>
                        <td>@context.FiscalCode</td>
                        <td>@context.Name</td>
                        <td>@context.Surname</td>
                        <td>@context.Gender</td>
                        <td>@context.Age</td>
                        <td>@context.Email</td>
                        <td>@context.Phone</td>
                        <td>
                            <MatButton Raised="true" @onclick="@(_ => Edit(@context.Id))">Edit</MatButton>
                            <MatButton Raised="true" Style="background: red;" @onclick="@(_ => Remove(@context))">Remove</MatButton>
                        </td>
                    </MatTableRow>
                </MatTable>
            } else
            {
                <Jumbotron Message="No Patients added yet"/>
            }
        </div>
    </div>
</div>

@code {
    private IList<PatientDto> patients { get; set; } = new List<PatientDto>();

    protected override async Task OnInitializedAsync()
    {
        patients = await _patientsService.GetAll();
    }

    void Create()
    {
        NavigationManager.NavigateTo($"/patients/create");
    }

    void Edit(int id)
    {
        NavigationManager.NavigateTo($"/patients/{id}/edit");
    }

    async Task Remove(PatientDto patient)
    {
        var result = await MatDialogService.AskAsync("Are you sure you want to delete the selected patient?", new string[] { "Yes", "Cancel" });
        if (result == "Yes")
        {
            await _patientsService.Delete(patient.Id);
            Toaster.Add("Patient Deleted", MatToastType.Success, "Success");
            patients.Remove(patient);
        }
    }
}
