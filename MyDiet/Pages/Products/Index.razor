@using MyDiet.Models.Dtos;
@using MyDiet.Services.IService

@page "/products"
@inject IProductService _productService
@inject NavigationManager NavigationManager
@inject IMatDialogService MatDialogService
@inject IMatToaster Toaster

<h3>Products</h3>
<div>
    <a href="/products/create" class="btn btn-success btn-block mb-3"><i class="fas fa-plus"></i> Add Product</a>
</div>
<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner">
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
            <MatTable Items="@products" Class="mat-elevation-z6" Style="text-align: center; width: 100%; table-layout: fixed; white-space: nowrap">
                <MatTableHeader>
                    <th style="text-align: center;"> Name</th>
                    <th style="text-align: center;">Description</th>
                    <th style="text-align: center;">Category</th>
                    <th style="text-align: center;">Options</th>
                </MatTableHeader>
                <MatTableRow>
                    <td>@context.Name</td>
                    <td>@context.Description</td>
                    @if (context.ProductCategory == null)
                    {
                        <td>No Product Category Associated</td>
                    }
                    else
                    {
                        <td>@context.ProductCategory.Description</td>
                    }
                    <td>
                        <MatButton Raised="true" @onclick="@(_ => Edit(@context.Id))">Edit</MatButton>
                        <MatButton Raised="true" Style="background: red;" @onclick="@(_ => Remove(@context))">Remove</MatButton>
                    </td>
                </MatTableRow>
            </MatTable>
        </div>
    </div>
</div>

@code {
    private IList<ProductDto> products { get; set; }

    protected override async Task OnInitializedAsync()
    {
        products = await _productService.GetAll();
    }

    void Edit(int id)
    {
        NavigationManager.NavigateTo($"/products/{id}/edit");
    }

    async Task Remove(ProductDto productDto)
    {
        var result = await MatDialogService.AskAsync("Are you sure you want to delete the selected product?", new string[] { "Yes", "Cancel" });
        if (result == "Yes")
        {
            await _productService.Delete(productDto.Id);
            Toaster.Add("Product Deleted", MatToastType.Success, "Success");
            products.Remove(productDto);
        }
    }
}
